{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Poly\\\\Projects\\\\WebSpider\\\\Frontend\\\\src\\\\components\\\\Pages\\\\Crawler\\\\Crawler.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport { isValidUrl } from \"../../../util/validator\";\nimport ContentTable from \"../../Common/ContentTable\";\nimport SideMenu from \"../../Common/SideMenu\";\nimport { crawlPage } from \"../../../util/http\";\nimport { sleep } from \"../../../util/time\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Crawler = () => {\n  _s();\n\n  const [state, setState] = useState({\n    ui: {\n      submit: \"SUBMIT\",\n      active: false\n    },\n    values: {\n      url: \"\",\n      maxDepth: \"1\",\n      maxPages: \"1\"\n    },\n    pages: []\n  });\n\n  const handleInputChange = event => {\n    const url = event.target.name === \"url\" ? event.target.value : state.values.url;\n    const active = isValidUrl(url) && !isNaN(state.values.maxDepth) && !isNaN(state.values.maxPages);\n    setState({ ...state,\n      ui: { ...state.ui,\n        active\n      },\n      values: { ...state.values,\n        [event.target.name]: event.target.value\n      }\n    });\n  };\n\n  const handleSubmit = async e => {\n    const {\n      url,\n      maxDepth,\n      maxPages\n    } = state.values;\n    const options = {\n      maxDepth: maxDepth.value,\n      maxPages: maxPages.value,\n      pages: [url.value]\n    };\n    await startCrawl({\n      options\n    });\n  };\n\n  const startCrawl = async ({\n    options\n  }) => {\n    const response = await crawlPage({\n      options\n    });\n\n    if (response.status !== 200) {\n      console.log(`[!] Crawl ended with status: ${response.status}`);\n      return;\n    }\n\n    const result = await response.json();\n    console.log(result);\n    await renderPageRow(result.page);\n\n    if (!result.fin) {\n      await sleep(1000);\n      await startCrawl({\n        options: result.options\n      });\n    }\n  };\n\n  const renderPageRow = page => new Promise(resolve => {\n    setState(s => ({ ...s,\n      pages: [...s.pages, page]\n    }));\n    resolve();\n  });\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"crawlerPage\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"form-section\",\n      className: \"column sm\",\n      children: /*#__PURE__*/_jsxDEV(SideMenu, {\n        values: state.values,\n        handleSubmit: handleSubmit,\n        submitStatus: state.ui.submit,\n        submitActive: state.ui.active,\n        handleInputChange: handleInputChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"view-section\",\n      className: \"column bg\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row title\",\n        children: /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"RESULTS\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ContentTable, {\n        pages: state.pages,\n        isLink: isValidUrl\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Crawler, \"MLsZh9RSY3AxWw+LZCBmuZk+QQw=\");\n\n_c = Crawler;\nexport default Crawler;\n\nvar _c;\n\n$RefreshReg$(_c, \"Crawler\");","map":{"version":3,"sources":["C:/Users/Poly/Projects/WebSpider/Frontend/src/components/Pages/Crawler/Crawler.js"],"names":["useState","isValidUrl","ContentTable","SideMenu","crawlPage","sleep","Crawler","state","setState","ui","submit","active","values","url","maxDepth","maxPages","pages","handleInputChange","event","target","name","value","isNaN","handleSubmit","e","options","startCrawl","response","status","console","log","result","json","renderPageRow","page","fin","Promise","resolve","s"],"mappings":"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","sourcesContent":["import { useState } from \"react\";\r\nimport { isValidUrl } from \"../../../util/validator\";\r\nimport ContentTable from \"../../Common/ContentTable\";\r\nimport SideMenu from \"../../Common/SideMenu\";\r\nimport { crawlPage } from \"../../../util/http\";\r\nimport { sleep } from \"../../../util/time\";\r\n\r\nconst Crawler = () => {\r\n  const [state, setState] = useState({\r\n    ui: {\r\n      submit: \"SUBMIT\",\r\n      active: false,\r\n    },\r\n    values: {\r\n      url: \"\",\r\n      maxDepth: \"1\",\r\n      maxPages: \"1\",\r\n    },\r\n    pages: [],\r\n  });\r\n\r\n  const handleInputChange = (event) => {\r\n    const url =\r\n      event.target.name === \"url\" ? event.target.value : state.values.url;\r\n    const active =\r\n      isValidUrl(url) &&\r\n      !isNaN(state.values.maxDepth) &&\r\n      !isNaN(state.values.maxPages);\r\n    setState({\r\n      ...state,\r\n      ui: {\r\n        ...state.ui,\r\n        active,\r\n      },\r\n      values: { ...state.values, [event.target.name]: event.target.value },\r\n    });\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    const { url, maxDepth, maxPages } = state.values;\r\n    const options = {\r\n      maxDepth: maxDepth.value,\r\n      maxPages: maxPages.value,\r\n      pages: [url.value],\r\n    };\r\n    await startCrawl({ options });\r\n  };\r\n\r\n  const startCrawl = async ({ options }) => {\r\n    const response = await crawlPage({ options });\r\n    if (response.status !== 200) {\r\n      console.log(`[!] Crawl ended with status: ${response.status}`);\r\n      return;\r\n    }\r\n    const result = await response.json();\r\n    console.log(result);\r\n    await renderPageRow(result.page);\r\n\r\n    if (!result.fin) {\r\n      await sleep(1000);\r\n      await startCrawl({ options: result.options });\r\n    }\r\n  };\r\n  const renderPageRow = (page) =>\r\n    new Promise((resolve) => {\r\n      setState((s) => ({ ...s, pages: [...s.pages, page] }));\r\n      resolve();\r\n    });\r\n\r\n  return (\r\n    <div className=\"crawlerPage\">\r\n      <div id=\"form-section\" className=\"column sm\">\r\n        <SideMenu\r\n          values={state.values}\r\n          handleSubmit={handleSubmit}\r\n          submitStatus={state.ui.submit}\r\n          submitActive={state.ui.active}\r\n          handleInputChange={handleInputChange}\r\n        />\r\n      </div>\r\n      <div id=\"view-section\" className=\"column bg\">\r\n        <div className=\"row title\">\r\n          <h2>RESULTS</h2>\r\n        </div>\r\n        <ContentTable pages={state.pages} isLink={isValidUrl}></ContentTable>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default Crawler;\r\n"]},"metadata":{},"sourceType":"module"}